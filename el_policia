secuencia4:
    MOV R0, #0         ; Inicializar contador i en 0

loop1:
    CMP R0, #3         ; Comparar i con 3
    BGE loop2          ; Si i >= 3, pasar al segundo bucle

    ; Primera secuencia
    LDR R1, =led       ; Dirección base de led[]
    LDR R2, [R1]       ; led[0]
    LDR R3, [R1, #4]   ; led[1]
    LDR R4, [R1, #8]   ; led[2]
    LDR R5, [R1, #12]  ; led[3]
    STR R2, [R1, #12]  ; digitalWrite(led[0], HIGH)
    STR R3, [R1, #16]  ; digitalWrite(led[1], HIGH)
    STR R4, [R1, #32]  ; digitalWrite(led[2], HIGH)
    STR R5, [R1, #48]  ; digitalWrite(led[3], HIGH)
    BL delay_100ms

    STR R2, [R1, #28]  ; digitalWrite(led[0], LOW)
    STR R3, [R1, #44]  ; digitalWrite(led[1], LOW)
    STR R4, [R1, #80]  ; digitalWrite(led[2], LOW)
    STR R5, [R1, #96]  ; digitalWrite(led[3], LOW)
    BL delay_100ms

    ADD R0, R0, #1     ; Incrementar contador i en 1
    B loop1            ; Volver al inicio del primer bucle

loop2:
    MOV R0, #0         ; Reinicializar contador i en 0

loop3:
    CMP R0, #3         ; Comparar i con 3
    BGE end_loop4      ; Si i >= 3, salir del bucle

    ; Segunda secuencia
    LDR R2, [R1, #16]  ; led[4]
    LDR R3, [R1, #20]  ; led[5]
    LDR R4, [R1, #24]  ; led[6]
    LDR R5, [R1, #28]  ; led[7]
    STR R2, [R1, #48]  ; digitalWrite(led[4], HIGH)
    STR R3, [R1, #64]  ; digitalWrite(led[5], HIGH)
    STR R4, [R1, #80]  ; digitalWrite(led[6], HIGH)
    STR R5, [R1, #96]  ; digitalWrite(led[7], HIGH)
    BL delay_100ms

    STR R2, [R1, #44]  ; digitalWrite(led[4], LOW)
    STR R3, [R1, #60]  ; digitalWrite(led[5], LOW)
    STR R4, [R1, #76]  ; digitalWrite(led[6], LOW)
    STR R5, [R1, #92]  ; digitalWrite(led[7], LOW)
    BL delay_100ms

    ADD R0, R0, #1     ; Incrementar contador i en 1
    B loop3            ; Volver al inicio del segundo bucle

end_loop4:
    BX LR              ; Salir de la función secuencia4
